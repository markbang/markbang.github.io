import{_ as t,o as a,c as o,Q as e}from"./chunks/framework.d084db19.js";const g=JSON.parse('{"title":"一、系统概要、信息、管理与信息系统","description":"","frontmatter":{},"headers":[],"relativePath":"about/学科期末复习/系统分析与设计.md","filePath":"about/学科期末复习/系统分析与设计.md","lastUpdated":1704186248000}'),r={name:"about/学科期末复习/系统分析与设计.md"},l=e('<details><summary>写在前面</summary> 系统分析与设计：重点由老师给出，本文章根据给出的重点来进行总结，理解或背诵自行解决 全文结合老师给的重点 PS：引言部分帮助理解 <p><img src="https://cdn.bangwu.top/img/202312231959498.webp" alt="explorer_d5F5kaOfGm"></p></details><h1 id="一、系统概要、信息、管理与信息系统" tabindex="-1">一、系统概要、信息、管理与信息系统 <a class="header-anchor" href="#一、系统概要、信息、管理与信息系统" aria-label="Permalink to &quot;一、系统概要、信息、管理与信息系统&quot;">​</a></h1><details><summary>引言👈</summary> 系统分析与设计：系统分析【理解需要做什么，详细说明需要做什么】+ 系统设计【详细说明系统将如何工作】 </details><h2 id="_1-1系统概要" tabindex="-1">1.1系统概要 <a class="header-anchor" href="#_1-1系统概要" aria-label="Permalink to &quot;1.1系统概要&quot;">​</a></h2><blockquote><p>系统是由相互联系和相互制约的若干要素组成的、具有特定功能的有机整体</p></blockquote><h2 id="_1-2信息概要" tabindex="-1">1.2信息概要 <a class="header-anchor" href="#_1-2信息概要" aria-label="Permalink to &quot;1.2信息概要&quot;">​</a></h2><blockquote><p>**数据（<strong>Data</strong>）**是对客观事物的性质、状态以及相互关系等进行记载的物理符号或这些物理符号的组合，反映了客观事物属性的记录</p><p>**信息（<strong>Information</strong>）**是经过加工后的数据，以有意义的形式加以排列和处理的数据（有意义的/被理解的数据）（who、when、where、what）</p><p><strong>知识</strong>（Knowledge）是信息的集合，从相关信息中过滤、提炼及加工而得到的有用资料，使得信息变得有用（有用的信息），是人类关于自然界、人类社会及思维方式与运动规律的认识、经验的总和 （why、how to）</p><p><strong>智慧</strong>（Wisdom）是知识和信息经过人类大脑内化后转换为对事物理解和处理的能力 （What is best），人类独有的一种能力。</p></blockquote><p><strong>数据和信息可看作原材料和成品的关系</strong></p><p><img src="https://cdn.bangwu.top/img/202312251927552.webp" alt="chrome_etPYy1IlSL"></p><blockquote><p><strong>信息的属性</strong></p></blockquote><ul><li>事实性、扩散性、传输性、共享性、增值性、不完全性、等级性、滞后性</li></ul><h2 id="_1-3信息系统" tabindex="-1">1.3信息系统 <a class="header-anchor" href="#_1-3信息系统" aria-label="Permalink to &quot;1.3信息系统&quot;">​</a></h2><blockquote><p><strong>信息系统</strong>：以计算机为基础，结合管理理论和方法，应用信息技术解决管理问题，为管理决策提供支持的系统。</p></blockquote><p><strong>信息系统的基本功能</strong>：</p><ul><li>数据的采集和输入</li><li>数据的传输、存储、加工、维护和使用</li></ul><p><strong>信息系统的结构</strong>：【按照抽象程度分为三个结构】</p><ol><li>概念结构</li><li>基于管理职能的逻辑结构</li><li>基于计算机实现的物理结构【硬件结构+软件结构】</li></ol><p><img src="https://cdn.bangwu.top/img/202312251952140.webp" alt="chrome_a2yNXHtbtG"></p><h2 id="_1-4信息系统与组织" tabindex="-1">1.4信息系统与组织 <a class="header-anchor" href="#_1-4信息系统与组织" aria-label="Permalink to &quot;1.4信息系统与组织&quot;">​</a></h2><blockquote><p>信息系统在组织中的地位</p></blockquote><ul><li><strong>战略型</strong>：信息系统是这些企业核心竞争力的一部分</li><li><strong>转变型</strong>：信息系统将逐步转变为企业未来成功的战略性支柱</li><li><strong>工厂型</strong>：信息系统是企业顺利运作的保障</li><li><strong>支持型</strong>：信息系统对企业当前运作和未来战略的影响不大</li></ul><h1 id="二、信息系统建设概论" tabindex="-1">二、信息系统建设概论 <a class="header-anchor" href="#二、信息系统建设概论" aria-label="Permalink to &quot;二、信息系统建设概论&quot;">​</a></h1><h2 id="信息系统建模" tabindex="-1">信息系统建模 <a class="header-anchor" href="#信息系统建模" aria-label="Permalink to &quot;信息系统建模&quot;">​</a></h2><blockquote><p>信息系统领域常用模型：【理解即可】</p></blockquote><table><thead><tr><th>模型名称</th><th>用途</th></tr></thead><tbody><tr><td>业务流程图</td><td>描述不同职能部门业务活动分工和活动过程</td></tr><tr><td>数据流图</td><td>描述数据的产生、处理、存储和去向的信息处理模型</td></tr><tr><td>实体关系图</td><td>描述系统中有价值的实体及其关系的数据模型</td></tr><tr><td>组织结构图</td><td>描述组织的部门及其从属关系的层次模型</td></tr><tr><td>模块结构图</td><td>描述软件功能模块及其调用关系的层次模型</td></tr><tr><td>判定表、判定树</td><td>描述决策条件及其行动关系</td></tr><tr><td>UML（类图、用例图、顺序图等）</td><td>描述软件系统结构及行为的一组模型</td></tr><tr><td>甘特图</td><td>描述项目任务及其完成日期的项目计划模型</td></tr></tbody></table><h2 id="_2-2信息系统开发方法与工具" tabindex="-1">2.2信息系统开发方法与工具 <a class="header-anchor" href="#_2-2信息系统开发方法与工具" aria-label="Permalink to &quot;2.2信息系统开发方法与工具&quot;">​</a></h2><blockquote><p>信息系统的生命周期(System Development Life Cycle，SDLC) 设计=&gt;评价=&gt;设计</p></blockquote><p>基于<strong>生命周期</strong>的开发方法：原型法、迭代法、瀑布法等【管理信息系统已学，理解即可】</p><p>基于<strong>技术</strong>的开发方法：面向过程、面向对象、面向服务</p><h1 id="三、系统规划与分析概述" tabindex="-1">三、系统规划与分析概述 <a class="header-anchor" href="#三、系统规划与分析概述" aria-label="Permalink to &quot;三、系统规划与分析概述&quot;">​</a></h1><h2 id="_3-2信息系统规划的技术与方法" tabindex="-1">3.2信息系统规划的技术与方法 <a class="header-anchor" href="#_3-2信息系统规划的技术与方法" aria-label="Permalink to &quot;3.2信息系统规划的技术与方法&quot;">​</a></h2><blockquote><p>战略目标集转移法【基本思想：将组织战略集转换成与它相关联和一致的信息系统战略集】</p><p>企业系统规划法【四个关键步骤：定义管理目标、定义管理功能组、定义数据分类、定义信息结构】</p><p>关键成功因素法【找出成功因素】</p><p>价值链分析法【企业进行的种种活动可以用一个价值链来表明，每个活动都有可能产生增值行为】</p></blockquote><h2 id="_3-5系统分析的任务、过程和方法" tabindex="-1">3.5系统分析的任务、过程和方法 <a class="header-anchor" href="#_3-5系统分析的任务、过程和方法" aria-label="Permalink to &quot;3.5系统分析的任务、过程和方法&quot;">​</a></h2><blockquote><p>系统分析的重要任务是识别和表达用户需求，分析领域业务，建立系统的逻辑模型。</p></blockquote><p>要解决以下问题：</p><ul><li>如何采集信息、理解和分析问题？</li><li>如何进行需求分析、确定需求？</li><li>如何表述需求？</li></ul><p><strong>系统分析的过程</strong>：问题分析=&gt;需求分析=&gt;需求定义</p><p><img src="https://cdn.bangwu.top/img/202312282116857.webp" alt="chrome_TJOv3VWjMa"></p><h1 id="四、uml统一建模语言" tabindex="-1">四、UML统一建模语言 <a class="header-anchor" href="#四、uml统一建模语言" aria-label="Permalink to &quot;四、UML统一建模语言&quot;">​</a></h1><blockquote><p>统一建模语言UML（unified modeling language）是一种基于面向对象的可视化的通用建模语言，用于对软件进行描述、可视化处理、构造和建立软件系统工作的文档。</p></blockquote><p><img src="https://cdn.bangwu.top/img/202312282119927.webp" alt="chrome_ifV2TxayLC"></p><p><strong>UML的构成</strong>：</p><ul><li><strong>事物(建模元素)</strong>：UML模型中面向对象的基本模块，代表物理上或概念上的元素</li><li><strong>关系</strong>：事物与事物之间的联系，根据耦合度从弱到强排列，分别是依赖、关联、聚合、组合、继承/泛化和实现关系</li><li><strong>图</strong>：事物和关系的可视化表示</li></ul><p>理解以下几种图的构成及功能：</p><p><img src="https://cdn.bangwu.top/img/202312282122289.webp" alt=""></p><p><img src="https://cdn.bangwu.top/img/202312282124009.webp" alt="chrome_jZvHwR4mUu"></p><p><img src="https://cdn.bangwu.top/img/202312282125853.webp" alt="chrome_OR9CZVf3KJ"></p><h1 id="五、流程建模-理解为主" tabindex="-1">五、流程建模（理解为主） <a class="header-anchor" href="#五、流程建模-理解为主" aria-label="Permalink to &quot;五、流程建模（理解为主）&quot;">​</a></h1><h2 id="业务流程分析与建模" tabindex="-1">业务流程分析与建模 <a class="header-anchor" href="#业务流程分析与建模" aria-label="Permalink to &quot;业务流程分析与建模&quot;">​</a></h2><blockquote><p><strong>跨职能流程图</strong>【面向过程】</p></blockquote><p>➢ 也称泳道图，面向过程，能够展示工作流中每个步骤涉及的职能部门和工作事项 ➢ 能展示各个环节间的关系，同时还能展示为过程负责的执行者（比如说人或部门） ➢ 适用于涉及多个部门或角色的场景</p><blockquote><p><strong>UML活动图</strong>【面向对象】</p></blockquote><p>➢ 面向对象，描述满足用例要求所要进行的活动以及活动间的约束关系，阐明了业务用例实现的工作流程 ➢ 活动图可用于需求获取、分析和设计的工作流中 ➢ 适合描述系统中多个对象跨多个用例的活动顺序</p><p><img src="https://cdn.bangwu.top/img/202312282135023.webp" alt="chrome_lUo0WXHplq"></p><h2 id="数据流程分断与建模" tabindex="-1">数据流程分断与建模 <a class="header-anchor" href="#数据流程分断与建模" aria-label="Permalink to &quot;数据流程分断与建模&quot;">​</a></h2><blockquote><p><strong>数据流图（Data Flow Diagram，DFD）</strong>，它从数据传递和加工角度，以图形方式来表达系统的逻辑功能、数据在系统内部的逻辑流向和逻辑变换过程。</p><p>数据流图用来记录系统中的数据是如何被采集、处理、保存和使用的</p></blockquote><p><img src="https://cdn.bangwu.top/img/202312282142173.webp" alt="chrome_PqYiKwykhF"></p><p>业务流程图和数据流图的区别：</p><table><thead><tr><th>项目</th><th>业务流程图</th><th>数据流图</th></tr></thead><tbody><tr><td>关注点</td><td>关注业务操作的顺序、活动以及角色之间的交互</td><td>关注数据如何在系统中流动以及如何被不同的过程或功能所处理</td></tr><tr><td>组成要素</td><td>角色、活动、关系、交付物、分支等</td><td>外部实体、数据流、数据处理、数据存储</td></tr><tr><td>用途</td><td>用于描述、分析、优化和通信关于业务的工作流程</td><td>表达系统的逻辑功能、数据在系统内部的逻辑流向和逻辑变换过程</td></tr><tr><td>表示方式</td><td>跨职能流程图、UML活动图</td><td>数据流图</td></tr></tbody></table><blockquote><p><strong>数据字典</strong>：数据字典是对数据流图的补充描述，用来描述数据流程图中的数据流、数据存储、处理过程和外部实体的详细内容。</p></blockquote><p><img src="https://s2.loli.net/2023/12/28/WQlbOFfzs9D3uVX.webp" alt="chrome_vldrNRO2S2"></p><h2 id="_5-3业务规则表示" tabindex="-1">5.3业务规则表示 <a class="header-anchor" href="#_5-3业务规则表示" aria-label="Permalink to &quot;5.3业务规则表示&quot;">​</a></h2><blockquote><p>从信息系统角度看，业务规则是描述和约束业务的语句，用来刻画业务的结构、控制和影响用户的行为。</p><p>处理复杂逻辑：【结构化语言+判定表+判定树】</p></blockquote><h1 id="六、用例建模-理解为主" tabindex="-1">六、用例建模（理解为主） <a class="header-anchor" href="#六、用例建模-理解为主" aria-label="Permalink to &quot;六、用例建模（理解为主）&quot;">​</a></h1><p>由于这章整章都需要理解，请看👉<a href="https://alist.bangwu.top/%E9%98%BF%E9%87%8C%E4%BA%91-%E6%A3%92%E6%97%A0/%E8%AF%BE%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90/%E7%AC%AC6%E7%AB%A0%20%E7%94%A8%E4%BE%8B%E5%BB%BA%E6%A8%A1.pdf" target="_blank" rel="noreferrer">课件</a>以及<a href="https://alist.bangwu.top/%E9%98%BF%E9%87%8C%E4%BA%91-%E6%A3%92%E6%97%A0/%E8%AF%BE%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90/%E7%AC%AC6%E8%AE%B2%E8%A1%A5%E5%85%85%EF%BC%9A%E4%BF%A1%E6%81%AF%E5%9C%A8%E7%A4%BE%E4%BC%9A%E7%BB%93%E6%9E%84%E4%B8%AD%E7%9A%84%E5%88%86%E5%B8%83%E7%8E%B0%E8%B1%A1.pdf" target="_blank" rel="noreferrer">课件补充</a></p><h1 id="七、领域对象建模-理解为主" tabindex="-1">七、领域对象建模（理解为主） <a class="header-anchor" href="#七、领域对象建模-理解为主" aria-label="Permalink to &quot;七、领域对象建模（理解为主）&quot;">​</a></h1><h2 id="_7-1面向对象方法概述" tabindex="-1">7.1面向对象方法概述 <a class="header-anchor" href="#_7-1面向对象方法概述" aria-label="Permalink to &quot;7.1面向对象方法概述&quot;">​</a></h2><p><code>对象</code>【对问题域中某个实体的抽象，由名称、属性和行为（方法）】、<code>类</code>【是指有相同属性和方法的一组对象的抽象概念】、<code>封装</code>【把对象的属性和方法结合为一个独立的整体，并尽可能隐藏对象的内部实现细节】、<code>继承</code>【指子类的对象拥有其父类的全部属性与方法】就不再做过多赘述</p><blockquote><p><code>多态</code>：指不同层次的子类可以共享父类中同一方法名称，但却可以各自按自己的需要实现不同的行为和执行不同的方法。【提高代码的扩展性】</p><p><code>对象关系</code>：继承、实现、关联、依赖。</p><p><code>对象之间的消息与协作</code>：【消息：对象之间必须要进行交互来实现复杂的行为，用消息message的形式提供信息】</p></blockquote><h2 id="_7-2领域对象建模" tabindex="-1">7.2领域对象建模 <a class="header-anchor" href="#_7-2领域对象建模" aria-label="Permalink to &quot;7.2领域对象建模&quot;">​</a></h2><blockquote><p><strong>领域对象</strong>：也称实体类，就是问题域中有意义的概念类，是现实世界中存在的事物（things）或事件（events）</p><p><strong>领域模型</strong>：又称领域对象模型、分析对象模型，是对领域内的概念类或现实世界中对象的可视化表示。</p></blockquote><p><img src="https://cdn.bangwu.top/img/202312282222288.webp" alt="chrome_j8NGPMnKOv"></p><blockquote><p><strong>领域类图</strong>（Domain Class Diagram）：分析阶段，用来表示特定领域内的概念以及这些概念之间的关系</p><p>主要包括：领域对象、领域对象之间的关系、关键属性【通常不包括方法】</p></blockquote><blockquote><p><strong>状态机图</strong>（state machine diagram）关注对象的状态及转换，用于描述基于事件响应的对象动态行为和状态之间的关系【适合描述某个对象的内部逻辑， 即描述<strong>一个对象跨多个用例</strong>的行为。】</p></blockquote><p><img src="https://cdn.bangwu.top/img/202312282227030.webp" alt="chrome_KbloAb2J39"></p><h1 id="八、面向对象设计" tabindex="-1">八、面向对象设计 <a class="header-anchor" href="#八、面向对象设计" aria-label="Permalink to &quot;八、面向对象设计&quot;">​</a></h1><h2 id="_8-1系统设计概述" tabindex="-1">8.1系统设计概述 <a class="header-anchor" href="#_8-1系统设计概述" aria-label="Permalink to &quot;8.1系统设计概述&quot;">​</a></h2><blockquote><p>**<code>系统设计</code>**又称为物理设计，就是根据新系统逻辑模型所提出的各项功能要求，结合实际条件，科学、合理地设计出新系统的解决方案，并为系统实施阶段的各项工作准备好必要的技术资料和有关文件。【系统设计对系统分析与系统实施起桥梁作用】</p></blockquote><p><img src="https://cdn.bangwu.top/img/202312282230886.webp" alt="chrome_8qlu9OWbP4"></p><h2 id="_8-3数据设计【这部分就是数据库知识-看看就行】" tabindex="-1">8.3数据设计【这部分就是数据库知识，看看就行】 <a class="header-anchor" href="#_8-3数据设计【这部分就是数据库知识-看看就行】" aria-label="Permalink to &quot;8.3数据设计【这部分就是数据库知识，看看就行】&quot;">​</a></h2><p>设计关系数据模型顺序：</p><ol><li><p>需求分析：确定应用程序需要存储的信息</p></li><li><p>定义实体：实体代表了业务环境中的一个对象；每个实体创建一张二维表</p></li><li><p>定义属性：即实体的特征; 每个属性对应表中的一列</p></li><li><p>确定键：确定每张表的主键和外键</p></li><li><p>定义关系：确定实体之间的关系；通过外键和参照完整性约束来实现和维护这些关系</p></li><li><p>规范化：通过分解表来消除数据冗余，提高数据一致性；通过正规化阶段，例如第一范式、第二范式等来进行</p></li><li><p>创建ER图（实体-关系图）</p></li><li><p>反规范化（如有必要）</p></li></ol><h1 id="九、接口层设计" tabindex="-1">九、接口层设计 <a class="header-anchor" href="#九、接口层设计" aria-label="Permalink to &quot;九、接口层设计&quot;">​</a></h1><blockquote><p>接口设计是指系统与外界的交互设计【人机接口设计、软件接口设计】</p></blockquote><p>理解用户体验设计内容：</p><p><img src="https://cdn.bangwu.top/img/202312282235109.webp" alt="chrome_ehnsIEexa4"></p><p>用户界面模型：<strong>原型图</strong>（Prototype）【就是用Axure设计出的原型】</p><h1 id="十、业务逻辑层设计" tabindex="-1">十、业务逻辑层设计 <a class="header-anchor" href="#十、业务逻辑层设计" aria-label="Permalink to &quot;十、业务逻辑层设计&quot;">​</a></h1><h2 id="_10-1面向过程的设计" tabindex="-1">10.1面向过程的设计 <a class="header-anchor" href="#_10-1面向过程的设计" aria-label="Permalink to &quot;10.1面向过程的设计&quot;">​</a></h2><blockquote><p><strong>模块结构图</strong>(Structure Chart)描述系统的模块结构及模块间的联系</p></blockquote><p>模块结构图的主要成分：</p><p><img src="https://cdn.bangwu.top/img/202312282242399.webp" alt="chrome_nmzop6jwJh"></p><p>例如：</p><p><img src="https://cdn.bangwu.top/img/202312282243091.webp" alt="chrome_DnlykHe8Is"></p><h2 id="_10-2面向对象业务逻辑设计" tabindex="-1">10.2面向对象业务逻辑设计 <a class="header-anchor" href="#_10-2面向对象业务逻辑设计" aria-label="Permalink to &quot;10.2面向对象业务逻辑设计&quot;">​</a></h2><blockquote><p><strong>理解设计类图/包图/顺序图/通信图，无需绘图</strong></p></blockquote><p>这部分我也不知道要怎么表述，就看<a href="https://alist.bangwu.top/%E9%98%BF%E9%87%8C%E4%BA%91-%E6%A3%92%E6%97%A0/%E8%AF%BE%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90/%E7%AC%AC10%E7%AB%A0%20%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%B1%82%E8%AE%BE%E8%AE%A1.pdf" target="_blank" rel="noreferrer">课件</a>吧</p><h1 id="十一、系统实施" tabindex="-1">十一、系统实施 <a class="header-anchor" href="#十一、系统实施" aria-label="Permalink to &quot;十一、系统实施&quot;">​</a></h1><h2 id="系统实施阶段的任务" tabindex="-1">系统实施阶段的任务 <a class="header-anchor" href="#系统实施阶段的任务" aria-label="Permalink to &quot;系统实施阶段的任务&quot;">​</a></h2><blockquote><p>系统实施是将系统设计阶段得到的设计方案转换为以计算机硬件为基础的能够实际运行的应用软件系统的过程。</p><p><strong>主要任务</strong>：硬件准备、软件准备（程序编写、测试和部署等）、人员培训和数据准备。实施完毕，系统才可上线。</p></blockquote><h2 id="_11-3系统测试" tabindex="-1">11.3系统测试 <a class="header-anchor" href="#_11-3系统测试" aria-label="Permalink to &quot;11.3系统测试&quot;">​</a></h2><blockquote><p><strong>白盒测试</strong>：根据一个软件部件的内部控制结构，测试是否依据设计正确地执行【逻辑上面走程序的流程，检测是否能走通】</p></blockquote><p>例如：</p><p><img src="https://cdn.bangwu.top/img/202312282251578.webp" alt="chrome_6QurArE5Bv"></p><p>就测试这个程序的条件分支是否能输出结果</p><h1 id="十二、系统运维与管理-自学" tabindex="-1">十二、系统运维与管理（自学） <a class="header-anchor" href="#十二、系统运维与管理-自学" aria-label="Permalink to &quot;十二、系统运维与管理（自学）&quot;">​</a></h1><blockquote><p>建议先看<a href="https://alist.bangwu.top/%E9%98%BF%E9%87%8C%E4%BA%91-%E6%A3%92%E6%97%A0/%E8%AF%BE%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90/%E7%AC%AC12%E7%AB%A0-%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4%E4%B8%8E%E7%AE%A1%E7%90%86%EF%BC%88%E8%87%AA%E5%AD%A6%EF%BC%89.pdf" target="_blank" rel="noreferrer">课件</a>然后再看下面的内容，也可以自己总结，其实也没什么，管理信息系统课好像学过</p></blockquote><h2 id="_12-1系统运维与管理概述" tabindex="-1">12.1系统运维与管理概述 <a class="header-anchor" href="#_12-1系统运维与管理概述" aria-label="Permalink to &quot;12.1系统运维与管理概述&quot;">​</a></h2><blockquote><p>系统运维与管理的主要任务是企业IT部门采用相关的方法、手段、技术、制度、流程和文档等，对软硬件运行环境、业务应用系统和运维人员进行综合的管理。</p><p>系统运维与管理主要由技术性运维和运维管理构成。</p></blockquote><h2 id="_12-2开发运维一体化devops" tabindex="-1">12.2开发运维一体化DevOps <a class="header-anchor" href="#_12-2开发运维一体化devops" aria-label="Permalink to &quot;12.2开发运维一体化DevOps&quot;">​</a></h2><blockquote><p>DevOps（Development &amp; Operations), 即开发运维一体化，重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。通过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。</p></blockquote><p><img src="https://cdn.bangwu.top/img/202312282256832.webp" alt="chrome_CQ4IBy2SVh"></p><p>不是很重要，就是走流程。。。</p>',113),p=[l];function n(i,h,s,d,c,b){return a(),o("div",null,p)}const q=t(r,[["render",n]]);export{g as __pageData,q as default};
