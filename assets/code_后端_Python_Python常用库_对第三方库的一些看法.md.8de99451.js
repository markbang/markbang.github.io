import{_ as e,o as t,c as o,Q as a}from"./chunks/framework.d084db19.js";const y=JSON.parse('{"title":"第三方库介绍","description":"","frontmatter":{},"headers":[],"relativePath":"code/后端/Python/Python常用库/对第三方库的一些看法.md","filePath":"code/后端/Python/Python常用库/对第三方库的一些看法.md","lastUpdated":1700061697000}'),n={name:"code/后端/Python/Python常用库/对第三方库的一些看法.md"},r=a('<h1 id="第三方库介绍" tabindex="-1">第三方库介绍 <a class="header-anchor" href="#第三方库介绍" aria-label="Permalink to &quot;第三方库介绍&quot;">​</a></h1><p>在Python语言的库中，分为Python标准库和Python的第三方库。python的标准库是随着python安装的时候默认自带的库，python的第三方库，需要下载后安装到python的安装目录下，不同的第三方库安装及使用方法不同。它们调用方式是一样的，都需要用import语句调用。</p><p>第三方库都是带有能实现某些工能的函数的，库里面的函数调用方法为<code>库名.函数</code>,当然，库中也可以包含库，所有调用方式就为<code>库名1.库名2.函数</code>，这和文件路径很相似。</p><h1 id="第三方库学习" tabindex="-1">第三方库学习 <a class="header-anchor" href="#第三方库学习" aria-label="Permalink to &quot;第三方库学习&quot;">​</a></h1><p>对于第三方库的学习呢，我个人认为是不需要刻意去记忆一些库的使用方法的，会熟练使用一些常用的库就行了，比如<code>numpy、pandas</code>这些与数据读取、写入相关的，<code>re、BeautifulSoup</code>这些与数据提取相关的。其他的不常用的库可以跟着官方文档学习一遍（其他博主的教学也行，但首推官方文档，比较全面），知道这个库能干些什么事情，实现什么功能就行了，可以在学习过程中把库的函数都记录下来，到时候用到的时候直接翻笔记看就行。</p><p>这就像是盖房子需要用砖块一样，你使用砖块时需要去了解它的材料构造、如何形成的吗，只要会用就行了。</p><h1 id="功能对应的库" tabindex="-1">功能对应的库 <a class="header-anchor" href="#功能对应的库" aria-label="Permalink to &quot;功能对应的库&quot;">​</a></h1><p>知道了有第三方库，可第三方库那么多，怎么找到我需要去学习的呢，GitHub大佬早就整理好了，里面的功能很全，star数26k+，<a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noreferrer">点击这里</a>就可以到达。</p><p>以上就是我对python第三方库的看法，祝学习python顺利！</p>',9),h=[r];function c(_,d,p,s,i,l){return t(),o("div",null,h)}const m=e(n,[["render",c]]);export{y as __pageData,m as default};
